<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo搭建个人博客-Mac/Windows-Coding/Github/码云各种平台完全介绍</title>
      <link href="/Blog/2020/04/13/hexo-da-jian-ge-ren-bo-ke-mac-windows-coding-github-ma-yun-ge-chong-ping-tai-wan-quan-jie-shao/"/>
      <url>/Blog/2020/04/13/hexo-da-jian-ge-ren-bo-ke-mac-windows-coding-github-ma-yun-ge-chong-ping-tai-wan-quan-jie-shao/</url>
      
        <content type="html"><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>方法一：官网下载（新手推荐） <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><p>下载成功后，运行<code>node-vXX.XX.XX.pkg</code>进行安装</p><p>方法二：Mac，如果安装了brew,可通过命令安装<br><code>brew install nodejs</code><br>  如果brew很久没用了，使用上述命令时还可能会先升级brew,比较费时</p><blockquote><p>安装完成后，分别输入 <code>node -v</code> 和 <code>npm -v</code> 验证是否安装成功</p></blockquote><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ul><li><p>Windows：管理员身份启动终端，终端输入<code>npm install -g hexo</code> 开始安装</p></li><li><p>Mac：终端输入<code>sudo npm install -g hexo</code> 开始安装</p></li><li><p>进入到想要创建Hexo博客的文件夹，终端输入<code>hexo init xx</code>进行克隆(xx代表创建的目录名称，以下如同)，这样就会在当前目录下，创建一个xx目录，就是你的博客目录</p></li><li><p><code>cd xx</code>进入该目录，执行<code>npm install</code>安装node_modules依赖</p></li><li><p>执行<code>hexo server</code>进行本地测试，根据输出的地址，在浏览其中打开<code>http://localhost:4000</code>，若打开了Hexo的网页即代表成功，如果网页一直在等待中，可能是端口被占用了，通过以下命令更改端口即可<code>hexo server -p 5000</code></p></li><li><p><code>Ctrl + C</code> 关闭该服务</p></li></ul><blockquote><p>至此，环境已经搭建完成，接下来就要设置自己喜欢的网页主题了</p></blockquote><h2 id="配置网页主题"><a href="#配置网页主题" class="headerlink" title="配置网页主题"></a>配置网页主题</h2><h3 id="查找自己喜欢的主题"><a href="#查找自己喜欢的主题" class="headerlink" title="查找自己喜欢的主题"></a>查找自己喜欢的主题</h3><p> <a href="https://www.zhihu.com/question/24422335/answers/updated" target="_blank" rel="noopener">https://www.zhihu.com/question/24422335/answers/updated</a></p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><ul><li><p>选择好主题后，根据主题github上的说明进行下载安装，此处以<code>matery</code>主题为例</p></li><li><p><code>matery</code>主题的github说明地址为 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p></li><li><p>根据提示执行操作</p></li><li><p>进入themes目录 <code>cd themes</code></p></li><li><p>克隆主题 <code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code></p></li></ul><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><p>修改 Hexo 根目录下的 _config.yml 的 theme 的值：theme: hexo-theme-matery</p><h2 id="部署到码云或Coding或GitHub"><a href="#部署到码云或Coding或GitHub" class="headerlink" title="部署到码云或Coding或GitHub"></a>部署到码云或Coding或GitHub</h2><ul><li>码云：免费用户不支持自定义域名和自动部署（新用户可免费试用1个月）；不不支持CNAME配置；国内访问较快；支持私有仓库</li><li>Coding：免费用户支持CNAME自定义域名和自动部署、私有仓库；需要实名认证；国内访问较快</li><li>GitHub：免费用户支持CNAME自定义域名和自动部署；免费用户不支持私有仓库；国内访问较慢</li></ul><h3 id="在码云或Coding或GitHub新建项目"><a href="#在码云或Coding或GitHub新建项目" class="headerlink" title="在码云或Coding或GitHub新建项目"></a>在码云或Coding或GitHub新建项目</h3><p>修改 Hexo 根目录下的 _config.yml 的deploy,repository设置为你的仓库地址，这里我使用的HTTPS的方式，SSH的方式太复杂，就不使用了，想用SSH的同学查一下用法。</p><pre><code>deploy:  type: git  repository: https://e.coding.net/hansion_it/Blog.git  branch: master</code></pre><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ul><li>终端输入 <code>hexo g</code></li><li>终端输入 <code>hexo d</code></li><li>若报错<code>Deployer not found: git</code>，输入 <code>npm install hexo-deployer-git --save</code> </li><li>安装成功后再输入<code>hexo g</code> 和 <code>hexo d</code></li><li>过程中可能会要求输入码云或coding或者github的账号密码，按要求输入即可</li></ul><h3 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h3><ul><li>GitHub和Coding采用CNAME的形式进行绑定</li><li>码云在部署时选择自定义域名即可</li></ul><h3 id="线上测试"><a href="#线上测试" class="headerlink" title="线上测试"></a>线上测试</h3><ul><li>在浏览器中打开git给你分配的域名或者你自定义的域名，查看是否打开成功，与本地测试时显示相同</li><li>若使用的是码云，可能样式显示存在问题，需要修改Hexo 根目录下的 _config.yml中的url和root分别为你的域名和仓库名，例如：<pre><code>url: http://xxxxx.ioroot: /blog</code></pre></li><li>DNS解析生效需要时间，同时注意浏览器缓存的影响</li></ul><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><ul><li>创建一个文章文件 <code>hexo new "你的文章名称"</code>，会在<code>/source/_posts/</code>目录下创建<code>你的文章名称.md</code>文件</li><li>在该.md文件内书写文章内容，文件内已默认创建了文章属性,若想添加其他属性，可参考主题的使用文档，一般来说都通用，这里以matery主题为例：<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#front-matter-%E9%80%89%E9%A1%B9%E8%AF%A6%E8%A7%A3" target="_blank" rel="noopener">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#front-matter-%E9%80%89%E9%A1%B9%E8%AF%A6%E8%A7%A3</a></li><li>写完文章后，<code>hexo g</code>生成相关文件</li><li><code>hexo s</code>本地预览一下，看看有没有问题</li><li>没有问题，<code>hexo d</code>提交</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
